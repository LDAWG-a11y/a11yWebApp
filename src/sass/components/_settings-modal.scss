@use '../vendors/mq';

.settings-modal {
  margin: auto;
  border: 1px solid var(--v2--color-inactive);
  border-radius: $radius-lg;
  width: 70rem;
  max-width: 96%;
  height: 96vh;
  font-size: $default-paragraph-size;
  transform: scale(0);
  opacity: 0;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  background-color: var(--v2--color-bg);
  overflow-y: hidden;
  transition: transform 600ms ease-in, opacity 600ms ease-in;

  &::backdrop {
    opacity: 0;
    background-color: rgba(255, 255, 255, 0.3);    
    backdrop-filter: blur(7.5px);
    transition: opacity 600ms ease-in;
  }

  &[open] {
    display: flex;
    flex-direction: column;
    transform: scale(1);
    opacity: 1;

    &::backdrop {
      opacity: 1;
    }
  }

  &.animating {
    transform: scale(0);
    opacity: 0;

    &::backdrop {
      opacity: 0;
    }

    @media (prefers-reduced-motion) {
      transform: scale(1);
      transition: opacity 600ms ease-in;
    }
  }

  @media screen and (max-height: 40em) and (orientation: landscape) {
    border-radius: 0;
    max-width: 100%;
    height: 100vh;
    max-height: 100vh;
  }

  // TODO create mixin
  @include mq.mq($from:md) {
    font-size: calc($default-paragraph-size + .125rem);
  }

  @include mq.mq($from:lg) {
    font-size: calc($default-paragraph-size + .25rem);
  }

  @media (prefers-reduced-motion) {
    transform: scale(1);
    transition: opacity 600ms ease-in;
  }
}

@media (prefers-reduced-transparency) {
  ::backdrop {
    background: grey;
    opacity: .95;
    backdrop-filter: blur(0);
  }
}

[data-pref--motion="off"] {
  ::backdrop {
    transition: opacity .0001ms !important;
  }
}

@starting-style {
  .settings-modal[open] {
    opacity: 0;
    transform: scale(0);

    &::backdrop {
      opacity: 0;
    }
  }
}

.settings-modal__header,
.settings-modal__footer {
  display: flex;
  align-items: center;
  padding: 0 16px;
  height: 4rem;
  min-height: 4rem;
  background-color: var(--v2--color-primary);
  color: var(--v2--color-bg);

  @include mq.mq($from:md) {
    height: 4.5rem;
    min-height: 4.5rem;
  }

  @include mq.mq($from:md) {
    height: 5rem;
    min-height: 5rem;
  }
}

.settings-modal__footer {
  justify-content: flex-end;
}

.settings-modal__title {
  // TODO need to redo mixin
  font-size: 2rem;
  color: var(--v2--color-text-alt);

  @include mq.mq($from:md) {
    font-size: 2.25rem;
  }

  @include mq.mq($from:lg) {
    font-size: 2.5rem;
  }
}

.settings-modal__content {
  padding: $space-xl $space-sm;
  overflow-y: auto;
  color: var(--v2--color-text);

  @media screen and (max-height: 40em) and (orientation: landscape) {
    height: calc(100vh - 8rem);
  }

  // TODO create mixin
  p {
    font-size: $default-paragraph-size;

    @include mq.mq($from:md) {
      font-size: calc($default-paragraph-size + .125rem);
    }
  
    @include mq.mq($from:lg) {
      font-size: calc($default-paragraph-size + .25rem);
    }
  }
}

.settings-modal__title {
  margin: 0 auto;
  padding: 0;
}

.settings__fieldset {
  display: flex;
  align-items: center;
  flex-direction: column;
  margin-top: 32px;
  border: 1px solid var(--v2--color-subtle);
  border-radius: 0 $radius-sm $radius-sm $radius-sm;
  padding: 16px 12px;
  background-color: var(--v2--color-tertiary);
}

.settings__legend {
  @include light-theme(('color': var(--v2--color-text)));

  position: relative;
  margin-left: -12px;
  border-radius: $radius-sm;
  padding: 0 12px;
  color: var(--v2--color-text-alt);
  background-color: var(--v2--color-tertiary);

  &::before {
    content: "";
    position: absolute;
    left: -1px;
    top: -1px;
    border: 1px solid var(--v2--color-subtle);
    border-radius: $radius-sm $radius-sm 0 0;
    width: calc(100% + 2px);
    height: 100%;
    z-index: -1;
  }
}

.settings__help {
  margin-bottom: 18px;
  border: 1px solid var(--v2--color-interactive-alt);
  border-radius: $radius-md;
  width: 100%;
  max-width: 65rem;
  background-color: var(--v2--color-bg);
  transition: border-color 300ms ease-in;
  // TODO need to redo mixin
  font-size: 1.125rem;

  &[open],
  &[open] > summary {
    border-radius: $radius-md $radius-md 0 0;
  }

  > summary {
    position: relative;
    border-radius: $radius-md;
    padding: 4px 6px 4px 12px;
    color: var(--v2--color-interactive-alt);
    transition: color 300ms ease-in, background-color 300ms ease-in;

    &:focus-visible,
    &:hover {
      background-color: var(--v2--color-interactive-alt);
      color: var(--v2--color-bg);
    }

    &:focus-visible {
      outline: 2px solid var(--v2--color-interactive-alt);
    }

    @include mq.mq($from:md) {
      font-size: 1.25rem;
    }

    @include mq.mq($from:xl) {
      font-size: 1.375rem;
    }
  }

  ul {
    margin-bottom: 0;
    padding: $space-xl $space-sm;

    > li {
      margin-bottom: .5rem;

      &::marker {
        color: var(--v2--color-secondary);
      }
    }
  }
}

.settings__btns-wrapper {
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  gap: 12px;
  margin: 8px auto 0;

  @include mq.mq($from:sm) {
    flex-direction: row;
  }
}

button[class^="settings__btn"],
.settings-modal__close-btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: $radius-md;
  padding: 6px $space-xxxl;
  line-height: 1.6;
  transition: color 300ms ease-in, background-color 300ms ease-in, border-color 300ms ease-in;

  @-moz-document url-prefix() {
    padding: 5px $space-xxl;
    
    span {
      padding-top: 2px;
    }
  }

  // TODO need to redo mixin
  font-size: 1.125rem;

  @include mq.mq($from:md) {
    font-size: 1.25rem;
  }

  @include mq.mq($from:xl) {
    font-size: 1.375rem;
  }
}

button[class^="settings__btn"] {
  border: 2px solid var(--v2--color-interactive-alt);
  background-color: var(--v2--color-interactive-alt);
  color: var(--v2--color-bg);

  &[aria-pressed="true"] {
    span {
      position: relative;
    
      &::after {
        content: "\2713";
        position: absolute;
        top: 50%;
        right: -$space-lg;
        transform: translateY(-50%);
        font-weight: bold;
        color: inherit;
      }
    }
  }

  &:focus-visible,
  &:hover {
    background-color: var(--v2--color-bg);
    color: var(--v2--color-interactive-alt);
  }

  &:focus-visible {
    outline: 2px solid var(--v2--color-interactive-alt);
  }
}

.settings-modal__close-btn {
  @include dark-theme(('border-color': var(--v2--color-text-alt)));

  border: 2px solid var(--v2--color-bg);
  background-color: var(--v2--color-bg);
  color: var(--v2--color-interactive-alt);

  &:focus-visible,
  &:hover {
    background-color: var(--v2--color-interactive-alt);
    color: var(--v2--color-bg);
  }

  &:focus-visible {
    @include dark-theme(('outline-color': var(--v2--color-text-alt)));
    outline: 2px solid var(--v2--color-bg);
  }
}

body:has(dialog[open]) {
  position: fixed;
  overflow-y: scroll;
  max-width: 100%;
}

body:not(:has(dialog[open])) {
  position: static;
  overflow-y: auto;
}