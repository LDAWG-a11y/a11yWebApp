@use '../vendors/mq';

@mixin focus-indicator($is_button: false, $is_pill: false, $is_destructive: false, $is_inverted: false) {
  transition: background-color 250ms ease-in-out, color 250ms ease-in-out;

  &:focus,
  &:hover {
    background-color: var($--color-interactive);
    color: var($--color-bg);

    @if $is_destructive {
      color: var(--color-warn--bright);
      background-color: var(--color-bg);
    }

    @if $is_inverted {
      background-color: var($--color-bg);
      color: var($--color-interactive);
    }
  }

  @if $is_button {
    position: relative;
    &::before {
      content: "";
      position: absolute;
      top: -6px;
      right: -6px;
      bottom: -6px;
      left: -6px;
      border: 2px solid transparent;
      border-radius: $radius-lg;
      transition: border-color 200ms ease-in;

      @if $is_pill {
        border-width: 3px;
        border-radius: $radius-xxl;
        inset: -8px;
      }

      @media (forced-colors: active) {
        display: none;
      }
    }

    &:focus-visible {
      &::before {
        border-color: var(--color-interactive);
        @if $is_destructive {
          border-color: var(--color-warn--bright);
        }
      }
    }
  }
}

@mixin dark-theme-adjust-light-btn {
  border-color: var(--color-text);
  background-color: var(--color-bg--light);

  &:hover,
  &:focus-visible {
    background-color: var(--color-interactive);
    border-color: var(--color-bg);
  }

  &:focus-visible {
    &::after {
      border-color: var(--color-text);
    }
  }
}

@mixin font-size {
  font-size: $default-paragraph-size;

  @include mq.mq($from:lg) {
    font-size: $large-paragraph-size;
  }

  @include mq.mq($from:xl) {
    font-size: $x-large-paragraph-size;
  }
}